[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

# Metadata
[tool.poetry]
authors = ["Swedish-National-Archives-AI-lab <gabriel.borg@riksarkivet.se>"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]
description = "A short description of the project"
documentation = "https://swedish-national-archives-ai-lab.github.io/htrflow_core/"
include = ["scripts/openmmlab_install.py", "src/htrflow_core/serialization/*"]

license = "EUPL-1.2"
name = "htrflow_core"
readme = "README.md"
repository = "https://github.com/Swedish-National-Archives-AI-lab/htrflow_core"
version = "0.0.1"

[[tool.poetry.packages]]
from = "src"
include = "htrflow_core"

[tool.poetry.scripts]
openmmlab_install = "scripts.openmmlab_install:main"
htrflow = "htrflow_core.cli:app"

# Dependencies
[tool.poetry.dependencies]
# python
python = ">=3.10, <4.0"
# dep
jinja2 = "3.1.3"
lorem = "^0.1.1"
matplotlib = "^3.8.3" # viz..
numpy = "1.26.4"
opencv-python = ">=4.6.0"
tqdm = "^4.66.2"
xmlschema = "^3.0.2"
requests = "^2.31.0"
# pydantic = "^2.7.0"  # Not added but should be

# openmmlab
mmcv = {version = "2.0.0", optional = true}
mmdet = {version = "3.1.0", optional = true}
mmengine = {version = "0.7.2", optional = true}
mmocr = {version = "1.0.1", optional = true}
torch = {version = "2.0.0", optional = true}
yapf = {version = "0.40.1", optional = true}

# huggingface
datasets = {version = "^2.17.1", optional = true}
huggingface-hub = {extras = ["cli"], version = "^0.20.3", optional = true}
transformers = {extras = ["torch"], version = "^4.37.2", optional = true}
# llm
accelerate = {version = "^0.28.0", optional = true} 
bitsandbytes = {version = "^0.43.0", optional = true} 
# ultralytics
ultralytics = {version = "^8.0.225", optional = true}

# cli
typer = {extras = ["all"], version = "^0.12.0", optional = true}
rich = {version =  "^13.7.1", optional = true}
cowsay = {version = "^6.1", optional = true}

[tool.poetry.extras]
huggingface = ["transformers", "huggingface-hub", "datasets"]
llm = ["transformers", "huggingface-hub", "datasets", "torch","accelerate", "bitsandbytes"]
openmmlab = [ "yapf","torch","mmcv", "mmdet", "mmengine", "mmocr", "huggingface-hub"]
pytorch = ["torch"]
ultralytics = ["ultralytics", "huggingface-hub"]
local_models = ["transformers", "huggingface-hub", "datasets", "ultralytics"]
cli = ["typer", "rich", "cowsay"]

[tool.poetry.group.test.dependencies]
mypy = "^1.8.0"
pre-commit = "^3.6.2"
pytest = "^8.0.1"
pytest-cov = "^4.1.0"
pytest-github-actions-annotate-failures = "^0.2.0"
python-dotenv = "1.0.1"
ruff = "^0.2.2"

[tool.poetry.group.docs.dependencies]
mike = "^2.1.1"
mkdocs-jupyter = "^0.24.6"
mkdocs-material = "^9.5.10"
mkdocstrings = {extras = ["python"], version = ">=0.20"}
mkdocs-table-reader-plugin = "^2.2.2"


# Test
[tool.pytest.ini_options]
addopts = "-v --cov htrflow_core --cov-report term-missing --no-cov-on-fail "
markers = ["slow: marks tests as slow (deselect with '-m \"not slow\"')", "gpu: marks tests as gpu (deselect with '-m \"not gpu\"')"]
pythonpath = "src"
testpaths = ["tests/unit"]

[tool.coverage.run]
source = ["src/htrflow_core"]

[tool.coverage.report]
exclude_lines = [
  "if __name__ == .__main__.:",
  "pragma: no cover",
  "def __repr__",
  "if self\\.debug",
  "raise AssertionError",
  "raise NotImplementedError",
]

# Formatting
[tool.ruff]
line-length = 119
target-version = "py310"
extend-include = ["*.ipynb"]

[tool.ruff.lint]
ignore = ["C901", "E741", "W605"]
select = ["C", "E", "F", "I", "W"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401", "F403", "F811"]

[tool.ruff.lint.isort]
known-first-party = ["htrflow_core"]
lines-after-imports = 2

# Typing
[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
exclude = ['venv', '.venv', "tests", "docs"]
ignore_missing_imports = true
mypy_path = "src"
no_implicit_optional = true
no_implicit_reexport = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true

# Scaffolding
[tool.cruft]
skip = ["src", "tests"]
