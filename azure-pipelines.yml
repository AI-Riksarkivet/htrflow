trigger:
  branches:
    include:
      - "*" 
      
pr:
  branches:
    include:
      - main

jobs:
  - job: CodeQuality
    displayName: "Code Quality"
    pool:
      name: 'k8s'
    steps:
      - checkout: self

      - script: |
          echo "Synchronizing project dependencies with uv..."
          uv sync --dev
        displayName: "Sync dependencies with uv"

      - script: |
          echo "Running ruff linting via uvx..."
          uvx ruff check
        displayName: "Run ruff linting with uvx"

  - job: Pytest
    displayName: "Pytest"
    pool:
      name: 'k8s'
    strategy:
      matrix:
        python3.10:
          pythonVersion: "3.10"
        python3.11:
          pythonVersion: "3.11"
        python3.12:
          pythonVersion: "3.12"
    steps:
      - checkout: self

      - script: |
          echo "Synchronizing project dependencies with uv..."
          uv sync --dev
        displayName: "Sync dependencies with uv"

      - script: |
          echo "Running tests on Python $(pythonVersion)..."
          uv run pytest -m "not gpu and not openmmlab and not teklia" --junitxml=test_results.xml
        displayName: "Run tests with pytest"

      - task: PublishTestResults@2
        inputs:
          testResultsFiles: "**/test_results.xml"
          testRunTitle: "htrflow Pytest $(pythonVersion) - $(Build.BuildNumber)"
        condition: succeededOrFailed()

  - job: SecretsCheck
    pool:
      name: 'k8s'
    steps:
      - script: |
          # Set up CURL headers and URI to get the changes count
          headers="Authorization: Bearer $(System.AccessToken)"
          uri="$(System.TeamFoundationServerUri)$(System.TeamProject)/_apis/build/builds/$(Build.BuildId)/changes"
          
          # Set count of changes in this push to the ChangesCount variable
          ChangesCount=$(curl -sSL -H "$headers" "$uri" | jq '.count')
          # If this is a PR, add 1 to ChangesCount.
          if [ "$(Build.Reason)" == "PullRequest" ]; then 
            ChangesCount=$(($ChangesCount+1))
          fi
          # Export ChangesCount variable for use in other steps
          echo "##vso[task.setvariable variable=ChangesCount]$ChangesCount"
        displayName: "Set ChangesCount"

      - checkout: self
        fetchDepth: $(ChangesCount)
        displayName: "Git Checkout"

      - script: |
          echo "Installing trufflehog..."
          curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin
          echo "Running trufflehog on the repository..."
          # Use 'git' mode and point to the repository directory.
          trufflehog --only-verified --fail --no-update git file:///tmp/
        displayName: "Running TruffleHog"
